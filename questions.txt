1.Is JSX mandatory for React?
No, JSX is not mandatory for React. JSX is a syntax extension that allows you to write HTML-like code in JavaScript, making it easier to create React elements.

2.Is ES6 mandatory for React?
Yes, ES6 (ECMAScript 2015) is required for React because modern React code relies heavily on ES6 features like classes, arrow functions, template literals, destructuring, and modules.

3.{TitleComponent} vs {} vs {} in JSX
<TitleComponent />: Renders the TitleComponent component.
{}: Embeds JavaScript expressions within JSX.

4.How can I write comments in JSX?
{/_This is a comment in jsx_/}

5.What is <React.Fragment></React.Fragment> and <></>?
<React.Fragment></React.Fragment> and <></> are both ways to use React Fragments to group multiple elements without adding extra nodes to the DOM.

6.What is Virtual DOM?
The Virtual DOM is a lightweight, in-memory representation of the actual DOM elements generated by React components.

7.What is Reconciliation in React?
Reconciliation is the process by which React updates the real DOM by comparing it with the Virtual DOM. React determines the minimal set of changes required to update the UI efficiently.

8.What is React Fiber?
React Fiber is a complete rewrite of Reactâ€™s core algorithm, aimed at improving the performance and flexibility of React applications. It enables features like concurrent rendering and better handling of asynchronous updates.

9.Why do we need keys in React? When do we need keys in React?
Keys are used to identify elements in a list, helping React to optimize rendering and maintain component state correctly. Keys are needed when rendering lists of elements to ensure efficient updates and avoid bugs related to component state.

10.Can we use index as keys in React?
While you can use the index of items as keys, it is generally discouraged because it can lead to issues with component state and performance. Using unique and stable IDs is preferred when possible.

11.What is props in React? Ways to
Props (short for properties) are inputs to a React component that allow data to be passed from parent to child components. Props are read-only and help make components reusable and modular.

12.What is props in React? Ways to
Props can be used by:
Passing data directly as attributes in JSX.
Using destructuring to extract props in the component function.

13.What is a Config Driven UI?
A Config Driven UI is an approach where the user interface is generated dynamically based on configuration data. This allows for easier customization and scalability, as the UI can be adjusted by changing the configuration without modifying the codebase.
